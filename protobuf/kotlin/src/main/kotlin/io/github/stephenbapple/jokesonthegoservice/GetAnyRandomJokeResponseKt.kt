// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protobuf/jokeserver.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.github.stephenbapple.jokesonthegoservice;

@kotlin.jvm.JvmName("-initializegetAnyRandomJokeResponse")
public inline fun getAnyRandomJokeResponse(block: io.github.stephenbapple.jokesonthegoservice.GetAnyRandomJokeResponseKt.Dsl.() -> kotlin.Unit): io.github.stephenbapple.jokesonthegoservice.GetAnyRandomJokeResponse =
  io.github.stephenbapple.jokesonthegoservice.GetAnyRandomJokeResponseKt.Dsl._create(io.github.stephenbapple.jokesonthegoservice.GetAnyRandomJokeResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `jokeserver.GetAnyRandomJokeResponse`
 */
public object GetAnyRandomJokeResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.github.stephenbapple.jokesonthegoservice.GetAnyRandomJokeResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.github.stephenbapple.jokesonthegoservice.GetAnyRandomJokeResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.github.stephenbapple.jokesonthegoservice.GetAnyRandomJokeResponse = _builder.build()

    /**
     * `.jokeserver.Joke joke = 1;`
     */
    public var joke: io.github.stephenbapple.jokesonthegoservice.Joke
      @JvmName("getJoke")
      get() = _builder.getJoke()
      @JvmName("setJoke")
      set(value) {
        _builder.setJoke(value)
      }
    /**
     * `.jokeserver.Joke joke = 1;`
     */
    public fun clearJoke() {
      _builder.clearJoke()
    }
    /**
     * `.jokeserver.Joke joke = 1;`
     * @return Whether the joke field is set.
     */
    public fun hasJoke(): kotlin.Boolean {
      return _builder.hasJoke()
    }
    public val GetAnyRandomJokeResponseKt.Dsl.jokeOrNull: io.github.stephenbapple.jokesonthegoservice.Joke?
      get() = _builder.jokeOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun io.github.stephenbapple.jokesonthegoservice.GetAnyRandomJokeResponse.copy(block: `io.github.stephenbapple.jokesonthegoservice`.GetAnyRandomJokeResponseKt.Dsl.() -> kotlin.Unit): io.github.stephenbapple.jokesonthegoservice.GetAnyRandomJokeResponse =
  `io.github.stephenbapple.jokesonthegoservice`.GetAnyRandomJokeResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.github.stephenbapple.jokesonthegoservice.GetAnyRandomJokeResponseOrBuilder.jokeOrNull: io.github.stephenbapple.jokesonthegoservice.Joke?
  get() = if (hasJoke()) getJoke() else null

